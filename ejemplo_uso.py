#!/usr/bin/env python3
"""
Ejemplo de uso del Sistema de Inventario Inteligente
Demuestra las principales funcionalidades del sistema
"""

import os
import django
import requests
import json
from datetime import datetime, timedelta

# Configurar Django
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "inventario_project.settings")
django.setup()

from productos.models import Producto, Venta, Proveedor
from productos.ai_services import AIService
from django.db.models import F, Sum

def ejemplo_consulta_basica():
    """Ejemplo de consulta b√°sica del inventario"""
    print("=" * 60)
    print("üì¶ EJEMPLO: Consulta B√°sica del Inventario")
    print("=" * 60)
    
    # Obtener productos disponibles
    productos = Producto.objects.filter(cantidad__gt=0).order_by('nombre')
    
    print(f"Total de productos disponibles: {productos.count()}")
    print("\nProductos en stock:")
    for producto in productos[:10]:  # Mostrar solo los primeros 10
        print(f"‚Ä¢ {producto.nombre}: {producto.cantidad} unidades (${producto.precio_venta})")
    
    if productos.count() > 10:
        print(f"... y {productos.count() - 10} productos m√°s")

def ejemplo_analisis_ia():
    """Ejemplo de an√°lisis con IA"""
    print("\n" + "=" * 60)
    print("ü§ñ EJEMPLO: An√°lisis con Inteligencia Artificial")
    print("=" * 60)
    
    ai_service = AIService()
    
    # Obtener producto con m√°s ventas para an√°lisis
    producto_popular = Venta.objects.values('producto').annotate(
        total_vendido=Sum('cantidad_vendida')
    ).order_by('-total_vendido').first()
    
    if producto_popular:
        producto = Producto.objects.get(id=producto_popular['producto'])
        print(f"Analizando producto: {producto.nombre}")
        
        # Predicci√≥n de demanda
        print("\nüîÆ Predicci√≥n de Demanda:")
        prediccion = ai_service.predecir_demanda(producto, 7)
        print(f"Confianza: {prediccion['confianza']}%")
        print(f"Demanda promedio: {prediccion['demanda_promedio_historica']} unidades/d√≠a")
        
        print("\nPredicciones para los pr√≥ximos 7 d√≠as:")
        for pred in prediccion['predicciones'][:3]:  # Mostrar solo 3 d√≠as
            print(f"‚Ä¢ {pred['fecha']}: {pred['demanda_predicha']} unidades")
    
    # An√°lisis de tendencias
    print("\nüìä An√°lisis de Tendencias:")
    tendencias = ai_service.analizar_tendencias()
    
    print("Productos con mayor rotaci√≥n:")
    for i, producto in enumerate(tendencias['productos_alta_rotacion'][:3], 1):
        print(f"{i}. {producto['producto__nombre']} - {producto['total_vendido']} unidades")

def ejemplo_sugerencias_reabastecimiento():
    """Ejemplo de sugerencias de reabastecimiento"""
    print("\n" + "=" * 60)
    print("üí° EJEMPLO: Sugerencias de Reabastecimiento")
    print("=" * 60)
    
    ai_service = AIService()
    sugerencias = ai_service.generar_sugerencias_reabastecimiento()
    
    if sugerencias['sugerencias']:
        print(f"Total de productos que necesitan reabastecimiento: {len(sugerencias['sugerencias'])}")
        
        for i, sugerencia in enumerate(sugerencias['sugerencias'][:3], 1):
            print(f"\n{i}. {sugerencia['producto']}")
            print(f"   Stock actual: {sugerencia['stock_actual']}")
            print(f"   Stock m√≠nimo: {sugerencia['stock_minimo']}")
            print(f"   Demanda diaria: {sugerencia['demanda_diaria_promedio']} unidades")
            print(f"   D√≠as restantes: {sugerencia['dias_restantes_estimados']}")
            print(f"   Cantidad sugerida: {sugerencia['cantidad_sugerida']}")
            print(f"   Urgencia: {sugerencia['urgencia']}")
    else:
        print("‚úÖ No hay productos que necesiten reabastecimiento inmediato")

def ejemplo_api_rest():
    """Ejemplo de uso de la API REST"""
    print("\n" + "=" * 60)
    print("üåê EJEMPLO: Uso de la API REST")
    print("=" * 60)
    
    base_url = "http://localhost:8000/api"
    
    try:
        # Obtener productos
        print("Obteniendo productos desde la API...")
        response = requests.get(f"{base_url}/productos/")
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ API funcionando correctamente")
            print(f"Total de productos en API: {data.get('count', 'N/A')}")
            
            # Mostrar algunos productos
            if 'results' in data and data['results']:
                print("\nPrimeros productos desde API:")
                for producto in data['results'][:3]:
                    print(f"‚Ä¢ {producto['nombre']}: {producto['cantidad']} unidades")
        else:
            print(f"‚ùå Error en API: {response.status_code}")
            
    except requests.exceptions.ConnectionError:
        print("‚ùå No se puede conectar con la API")
        print("üí° Aseg√∫rate de que el servidor Django est√© ejecut√°ndose:")
        print("   python manage.py runserver")

def ejemplo_registro_venta():
    """Ejemplo de registro de una venta"""
    print("\n" + "=" * 60)
    print("üí∞ EJEMPLO: Registro de Venta")
    print("=" * 60)
    
    # Obtener un producto disponible
    producto = Producto.objects.filter(cantidad__gt=0).first()
    
    if producto:
        print(f"Producto seleccionado: {producto.nombre}")
        print(f"Stock actual: {producto.cantidad}")
        print(f"Precio: ${producto.precio_venta}")
        
        # Simular una venta
        cantidad_vendida = min(2, producto.cantidad)  # Vender m√°ximo 2 unidades
        
        venta = Venta.objects.create(
            producto=producto,
            cantidad_vendida=cantidad_vendida,
            precio_unitario=producto.precio_venta,
            cliente="Cliente Ejemplo",
            notas="Venta de demostraci√≥n"
        )
        
        # Actualizar stock
        producto.cantidad -= cantidad_vendida
        producto.save()
        
        print(f"\n‚úÖ Venta registrada:")
        print(f"   Cantidad vendida: {cantidad_vendida}")
        print(f"   Total: ${venta.total_venta}")
        print(f"   Stock restante: {producto.cantidad}")
    else:
        print("‚ùå No hay productos disponibles para la venta")

def ejemplo_estadisticas():
    """Ejemplo de estad√≠sticas del sistema"""
    print("\n" + "=" * 60)
    print("üìä EJEMPLO: Estad√≠sticas del Sistema")
    print("=" * 60)
    
    # Estad√≠sticas b√°sicas
    total_productos = Producto.objects.count()
    productos_activos = Producto.objects.filter(activo=True).count()
    productos_bajo_stock = Producto.objects.filter(cantidad__lte=F('cantidad_minima')).count()
    
    # Ventas del √∫ltimo mes
    fecha_limite = datetime.now() - timedelta(days=30)
    ventas_mes = Venta.objects.filter(fecha_venta__gte=fecha_limite)
    total_ventas = ventas_mes.count()
    ingresos_mes = sum(venta.total_venta for venta in ventas_mes)
    
    print(f"üì¶ Total de productos: {total_productos}")
    print(f"‚úÖ Productos activos: {productos_activos}")
    print(f"‚ö†Ô∏è  Productos bajo stock: {productos_bajo_stock}")
    print(f"üí∞ Ventas del mes: {total_ventas}")
    print(f"üíµ Ingresos del mes: ${ingresos_mes:,.2f}")
    
    # Top productos m√°s vendidos
    top_productos = ventas_mes.values('producto__nombre').annotate(
        total_vendido=Sum('cantidad_vendida')
    ).order_by('-total_vendido')[:5]
    
    print(f"\nüèÜ Top 5 productos m√°s vendidos:")
    for i, prod in enumerate(top_productos, 1):
        print(f"{i}. {prod['producto__nombre']} - {prod['total_vendido']} unidades")

def main():
    """Funci√≥n principal con ejemplos"""
    print("ü§ñ SISTEMA DE INVENTARIO INTELIGENTE")
    print("Ejemplos de uso y funcionalidades")
    print("=" * 60)
    
    try:
        # Ejecutar ejemplos
        ejemplo_consulta_basica()
        ejemplo_analisis_ia()
        ejemplo_sugerencias_reabastecimiento()
        ejemplo_estadisticas()
        ejemplo_registro_venta()
        ejemplo_api_rest()
        
        print("\n" + "=" * 60)
        print("‚úÖ ¬°Ejemplos completados exitosamente!")
        print("=" * 60)
        print("\nüí° Pr√≥ximos pasos:")
        print("1. Ejecutar servidor Django: python manage.py runserver")
        print("2. Abrir dashboard: python dashboard_app.py")
        print("3. Usar CLI: python consultar_inventario.py --interactive")
        print("4. Acceder a admin: http://localhost:8000/admin/")
        print("5. Ver API: http://localhost:8000/api/")
        
    except Exception as e:
        print(f"\n‚ùå Error ejecutando ejemplos: {e}")
        print("üí° Aseg√∫rate de que:")
        print("   ‚Ä¢ Las migraciones est√©n aplicadas: python manage.py migrate")
        print("   ‚Ä¢ Los datos de ejemplo est√©n creados: python seed_data.py")

if __name__ == "__main__":
    main()
